/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace digidoc {

using System;
using System.Runtime.InteropServices;

public class SignatureProductionPlace : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SignatureProductionPlace(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SignatureProductionPlace obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SignatureProductionPlace() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          digidocPINVOKE.delete_SignatureProductionPlace(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SignatureProductionPlace() : this(digidocPINVOKE.new_SignatureProductionPlace__SWIG_0(), true) {
  }

  public SignatureProductionPlace(string city, string stateOrProvince, string postalCode, string countryName) : this(digidocPINVOKE.new_SignatureProductionPlace__SWIG_1(city, stateOrProvince, postalCode, countryName), true) {
    if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isEmpty() {
    bool ret = digidocPINVOKE.SignatureProductionPlace_isEmpty(swigCPtr);
    return ret;
  }

  public string city {
    set {
      digidocPINVOKE.SignatureProductionPlace_city_set(swigCPtr, value);
      if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = digidocPINVOKE.SignatureProductionPlace_city_get(swigCPtr);
      if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string stateOrProvince {
    set {
      digidocPINVOKE.SignatureProductionPlace_stateOrProvince_set(swigCPtr, value);
      if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = digidocPINVOKE.SignatureProductionPlace_stateOrProvince_get(swigCPtr);
      if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string postalCode {
    set {
      digidocPINVOKE.SignatureProductionPlace_postalCode_set(swigCPtr, value);
      if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = digidocPINVOKE.SignatureProductionPlace_postalCode_get(swigCPtr);
      if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string countryName {
    set {
      digidocPINVOKE.SignatureProductionPlace_countryName_set(swigCPtr, value);
      if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = digidocPINVOKE.SignatureProductionPlace_countryName_get(swigCPtr);
      if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
