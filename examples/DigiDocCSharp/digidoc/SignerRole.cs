/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace digidoc {

using System;
using System.Runtime.InteropServices;

public class SignerRole : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SignerRole(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SignerRole obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SignerRole() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          digidocPINVOKE.delete_SignerRole(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SignerRole() : this(digidocPINVOKE.new_SignerRole__SWIG_0(), true) {
  }

  public SignerRole(string claimedRole) : this(digidocPINVOKE.new_SignerRole__SWIG_1(claimedRole), true) {
    if (digidocPINVOKE.SWIGPendingException.Pending) throw digidocPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isEmpty() {
    bool ret = digidocPINVOKE.SignerRole_isEmpty(swigCPtr);
    return ret;
  }

  public StringVector claimedRoles {
    set {
      digidocPINVOKE.SignerRole_claimedRoles_set(swigCPtr, StringVector.getCPtr(value));
    } 
    get {
      IntPtr cPtr = digidocPINVOKE.SignerRole_claimedRoles_get(swigCPtr);
      StringVector ret = (cPtr == IntPtr.Zero) ? null : new StringVector(cPtr, false);
      return ret;
    } 
  }

}

}
